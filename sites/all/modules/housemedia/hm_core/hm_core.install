<?php

/**
 * @file
 * Install, update and uninstall functions for the Housemedia Core module.
 */

function hm_core_install() {

  // Removed modules.
  $modules_list = array(
    'db_tweaks',
  	'drupal_tweaks',
    'slider',
    'ct_plus',
    'spaces',
    'views_jsgantt',
    'ddblock',
  	'custom_search_blocks',
    'custom_search',
    'keyword_autocomplete',
    'arrange_fields',
    'comment_driven_inspect',
    'driven_nep',
    'driven_inspect',
    'comment_driven_nodeapi',
    'comment_driven',
    'driven_props',
    'driven_diff',
    'driven_cck_producer_consumer',
    'driven_acp',
    'driven',
  	'finder_views',
    'finder_user',
    'finder_text',
    'finder_search',
    'finder_optionwidgets',
    'finder_node',
    'finder_autocomplete',
    'finder',
   	'cck_list',
    'nodeblock',
    'site_map',
  );


  $ret = array();

  // Manually drop unecessary tables.
  db_drop_table($ret, 'spaces_overrides');
  db_drop_table($ret, 'spaces_presets');
  db_drop_table($ret, 'ddblock_block');
  db_drop_table($ret, 'keyword_autocomplete_keywords');
  db_drop_table($ret, 'comment_driven_log');
  db_drop_table($ret, 'cache_finder_find');
  db_drop_table($ret, 'finder');
  db_drop_table($ret, 'finder_element');

  // Drop content types.
  node_type_delete('ddblock_news_item');
  node_type_delete('intro22');
  node_type_delete('mapa');
  node_type_delete('mapa123');
  node_type_delete('slider');
  node_type_delete('gallery');
  node_type_delete('gallery_image');

  node_types_rebuild();
  menu_rebuild();

  // Install modules.
  drupal_install_modules(array(
    'contemplate',
    'jcarousel',
    'og_user_roles',
    'og_reg_keys',
    'acl',
    'forum_access',
    'hm_news',
    'hm_promotion',
    'hm_group',
    'hm_profile',
    'hm_investment'
  ));

  // Disable module.
  module_disable(array(
  	'commons_group_aggregator',
    'commons_wiki',
    'commons_discussion',
    'commons_poll',
    'commons_shoutbox',
    'shoutbox_user',
    'shoutbox_points',
    'shoutbox_group',
    'shoutbox',
  	'og_aggregator',
    'mollom',
    'poll',
  ));

  // Install translations.
  _hm_core_update_translation('sites/all/translations/modules');
  _hm_core_update_translation('sites/all/modules/housemedia');
  _hm_core_update_translation('sites/all/themes/housemedia/translations');

  // Delete views.
  $views = array(
    'glowna_aktualnosci',
    'galeria_inwestycji',
    'gallery'
  );

  foreach ($views as $view) {
    views_get_view($view)->delete();
  }

  $handle  = fopen('./sites/all/modules/housemedia/hm_core/resources/register.node', 'r');
  $content = stream_get_contents($handle);
  fclose($handle);

  $node          = node_load(306);
  $node->body    = $content;
  $node->format  = 3;
  $node->comment = COMMENT_NODE_DISABLED; // Disable comments.
  node_save($node);

  return $ret;
}

function hm_core_update_6001() {
  drupal_install_modules(array(
    'admin_menu',
    'workflow',
    'hm_credit_form'
  ));

  // Import workflow configuration.
  _hm_credit_form_import_db_table(drupal_get_path('module', 'hm_credit_form') .'/workflow');

  node_type_delete('profile');

  module_disable(array('profile'));
  drupal_uninstall_module('profile');

  return array();
}

function hm_core_update_6002() {
  drupal_install_modules(array('auto_nodetitle'));

  _hm_core_update_translation('sites/all/translations/modules');

  return array();
}

function hm_core_update_6003() {

  _hm_core_update_translation('sites/all/translations/modules');
  _hm_core_update_translation('sites/all/modules/housemedia/hm_profile');

  return array();
}

function hm_core_update_6004() {
  $path = drupal_get_path('module', 'hm_core');
  hm_core_import_db_table($path .'/config', '', TRUE);
}

function hm_core_update_6005() {

  $rtype_follower = user_relationships_type_load(array('name' => 'Znajomy'));
  $rtype_friend = clone $rtype_follower;

  // Follower
  $rtype_follower->name = 'follower';
  $rtype_follower->plural_name = 'users you follow';
  $rtype_follower->is_oneway = 1;
  $rtype_follower->requires_approval = 0;
  $rtype_follower->is_reciprocal = 1;

  user_relationships_type_save($rtype_follower);

  // Friend.
  unset($rtype_friend->rtid);

  user_relationships_type_save($rtype_friend);

  db_query(
    'INSERT INTO {user_relationship_type_roles} (rtid, rid) VALUES (%d, %d)',
    $rtype_friend->rtid, 8
  );

  db_query(
    'INSERT INTO {user_relationship_type_roles_receive} (rtid, rid) VALUES (%d, %d)',
    $rtype_friend->rtid, 8
  );
}

/**
 * Update translations.
 *
 * @param $dir
 *   Path to directory that we looking for translations.
 */
function _hm_core_update_translation($dir, $mask = 'pl.po$', $mode = LOCALE_IMPORT_KEEP) {
  include_once './includes/locale.inc';

  $files = file_scan_directory($dir, $mask);
  foreach ($files as $file) {
    $file->filepath = $file->filename;
    _locale_import_po($file, language_default('language'), $mode, 'default');
  }
}

/**
 * Import data to db table.
 *
 * Read data from xml file created by mysql command with --xml option and
 * insert it to db table.
 *
 * @param $filename
 *   Path to the file. May be regular file or directory.
 * @param $table
 *   (optional) Destination table. Default filename without extension is used.
 * @param $truncate
 *   (optional) Truncate table before insert new data.
 * @param $auto_increment
 *   (optional) Disable auto_increment behaviour in mysql.
 */
function hm_core_import_db_table($filename, $table = '', $truncate = FALSE, $auto_increment = FALSE) {

  // If the filename is a directory recursively call mrtools_import_db_table()
  // for each found file.
  if (is_dir($filename)) {
    foreach (file_scan_directory($filename, '.xml$') as $file) {
     hm_core_import_db_table($file->filename, $file->name, $truncate, $auto_increment);
    }
    return TRUE;
  }

  // If the filename is a regular file read xml data and insert it
  // to the database table.
  if (is_file($filename)) {

    if (empty($table)) {
      $table = basename($filename, '.xml');
    }

    if (!$auto_increment) {
      db_query("SET SESSION sql_mode='NO_AUTO_VALUE_ON_ZERO';");
    }

    if ($truncate) {
      db_query('TRUNCATE {'. db_escape_string($table) .'}');
    }

    foreach (simplexml_load_file($filename) as $row) {

      $fields = $values = array();

      foreach ($row->field as $field) {
        $fields[] = (string) $field['name'];
        $values[] = (string) $field;
      }

      // Prepare DB query.
      $table  = db_escape_string($table);
      $fields = db_escape_string(implode(',', $fields));

      db_query(
     	  'INSERT INTO {'. $table .'} ('. $fields .') VALUES ('. db_placeholders($values, 'varchar') .')',
        $values
      );
    }
  }
}

