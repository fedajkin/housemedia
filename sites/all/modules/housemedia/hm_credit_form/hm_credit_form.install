<?php

/**
 * Implementation of hook_install().
 */
function hm_credit_form_install() {
  
  // Create relation type.
  $rtype = new stdClass;
  $rtype->name = 'advisor';
  $rtype->plural_name = 'advisors';
  $rtype->is_oneway = 1;
  $rtype->is_reciprocal = 0;
  $rtype->requires_approval = 0;
  $rtype->expires_val = '0';

  user_relationships_type_save($rtype);
  
  // Assign roles to relationship.
  db_query(
    'INSERT INTO {user_relationship_type_roles} (rtid, rid) VALUES (%d, %d)', 
    $rtype->rtid, 8
  );

  db_query(
    'INSERT INTO {user_relationship_type_roles_receive} (rtid, rid) VALUES (%d, %d)',
    $rtype->rtid, 7
  );
  
  // Save relationship ID.
  variable_set('hm_credit_form_rtid', $rtype->rtid);

  // Import workflow configuration.
  // _hm_credit_form_import_db_table(drupal_get_path('module', 'hm_credit_form') .'/workflow');
}

/**
 * Implementation of hook_uninstall().
 */
function hm_credit_form_uninstall() {

}

/**
 * Import data to db table.
 *
 * Read data from xml file created by mysql command with --xml option and
 * insert it to db table.
 *
 * @param $filename
 *   Path to the file. May be regular file or directory.
 * @param $table
 *   (optional) Destination table. Default filename without extension is used.
 * @param $truncate
 *   (optional) Truncate table before insert new data.
 * @param $auto_increment
 *   (optional) Disable auto_increment behaviour in mysql.
 */
function _hm_credit_form_import_db_table($filename, $table = '', $truncate = FALSE, $auto_increment = FALSE) {

  // If the filename is a directory recursively call mrtools_import_db_table() 
  // for each found file.
  if (is_dir($filename)) {
    foreach (file_scan_directory($filename, '.xml$') as $file) {
      _hm_credit_form_import_db_table($file->filename, $file->name, $truncate, $auto_increment);
    }
    return TRUE;
  }

  // If the filename is a regular file read xml data and insert it 
  // to the database table.
  if (is_file($filename)) {

    if (empty($table)) {
      $table = basename($filename, '.xml');
    }

    if (!$auto_increment) {
      db_query("SET SESSION sql_mode='NO_AUTO_VALUE_ON_ZERO';");
    }

    if ($truncate) {
      db_query('TRUNCATE {'. db_escape_string($table) .'}');
    }

    foreach (simplexml_load_file($filename) as $row) {

      $fields = $values = array();

      foreach ($row->field as $field) {
        $fields[] = (string) $field['name'];
        $values[] = (string) $field;
      }

      // Prepare DB query.
      $table  = db_escape_string($table);
      $fields = db_escape_string(implode(',', $fields));

      db_query(
        'INSERT INTO {'. $table .'} ('. $fields .') VALUES ('. db_placeholders($values, 'varchar') .')',
        $values
      );
    }
  }
}