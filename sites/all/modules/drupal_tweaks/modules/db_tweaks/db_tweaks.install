<?php

/**
 * @file
 *   Installation file
 *
 * @version
 *
 * @developers
 *   Rafal Wieczorek <kenorb@gmail.com>
 */

/**
 * Implementation of hook_install().
 */
function db_tweaks_install() {
  $min_weight = db_result(db_query("SELECT MIN(weight) FROM {system}"));
  db_query("UPDATE {system} SET bootstrap = '%d', weight = '%d' WHERE name = 'db_tweaks'", 1, ($min_weight-1));
}

/**
 * Implementation of hook_uninstall().
 */
function db_tweaks_uninstall() {
  db_query("DELETE FROM {variable} WHERE name LIKE 'db_tweaks_%%'");
}

/**
 * Test and report Drupal installation requirements.
 *
 * @param $phase
 *   The current system installation phase.
 * @return
 *   An array of system requirements.
 */
function db_tweaks_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time
  $t = get_t();

    global $db_type;
    switch ($db_type) {
        case 'mysql':
        case 'mysqli':
          module_load_include('inc', 'db_tweaks'); // load additional function from included file
            /* LOAD DB SETTINGS */
            $mysql_conf = db_tweaks_get_mysql_configuration(); // get actual settings
            
            foreach ($mysql_conf as $var_name => $var_values) {
              switch ($var_name) {
                case 'max_allowed_packet':
                  // Test PHP memory_limit
                  $requirements[$var_name] = array(
                    'title' => $t('MySQL max_allowed_packet limit'),
                    'value' => $mysql_conf['max_allowed_packet']['mysql'],
                  );

                  if (parse_size($var_values['mysql'] . 'M') < parse_size(DRUPAL_MINIMUM_MYSQL_MAX_ALLOWED_PACKET)) {
                    $description = '';
                    if ($phase == 'install') {
                      $description = $t('Consider increasing your MySQL max_allowed_packet limit to %memory_minimum_limit to help prevent errors in the installation process.', array('%memory_minimum_limit' => DRUPAL_MINIMUM_MYSQL_MAX_ALLOWED_PACKET));
                    }
                    elseif ($phase == 'update') {
                      $description = $t('Consider increasing your MySQL max_allowed_packet limit to %memory_minimum_limit to help prevent errors in the update process.', array('%memory_minimum_limit' => DRUPAL_MINIMUM_MYSQL_MAX_ALLOWED_PACKET));
                    }
                    elseif ($phase == 'runtime') {
                      $description = $t('Depending on your configuration, Drupal can run with a %memory_limit%MB MySQL max_allowed_packet limit. However, a %memory_minimum_limit MySQL max_allowed_packet limit or above is recommended, especially if your site uses additional custom or contributed modules.', array('%memory_limit%' => $mysql_conf['max_allowed_packet']['mysql'], '%memory_minimum_limit' => DRUPAL_MINIMUM_MYSQL_MAX_ALLOWED_PACKET));
                    }

                    if (!empty($description)) {
                      $description .= ' '. $t('Increase the memory limit by editing the max_allowed_packet parameter in Database Tweaks <a href="!url">Settings Page</a> (or contact your system administrator or hosting provider for assistance).', array('!url' => url('admin/settings/db_tweaks')));
                    }

                    $requirements['mysql_memory_limit']['description'] = $description .' '. $t('See the <a href="@url">Drupal requirements</a> for more information.', array('@url' => 'http://drupal.org/requirements'));
                    $requirements['mysql_memory_limit']['severity'] = REQUIREMENT_WARNING;
                  }
                break;
              default:
                if ($phase == 'runtime') {
                  $requirements[$var_name] = array(
                    'title' => "MySQL: $var_name",
                    'value' => $var_values['mysql'],
                    'severity' => REQUIREMENT_INFO,
                  );
                }
                break;
            } // end: switch
          } // end: foreach
    } // end: db switch
  return $requirements;
}

