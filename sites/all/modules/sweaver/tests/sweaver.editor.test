<?php
// $Id: sweaver.editor.test,v 1.1.2.18 2010/09/30 13:54:03 swentel Exp $

/**
 * @file
 * Basic tests for sweaver frontend editor.
 * Note: run this patch on D6 to allow posts to hidden fields:
 * http://drupal.org/node/488810#comment-1693662.
 */

class sweaverEditor extends DrupalWebTestCase {
  /**
   * Implementation of getInfo().
   */
  function getInfo() {
    return array(
      'name' => t('Sweaver editor'),
      'description' => t('Tests for the frontend editor.'),
      'group' => t('Sweaver'),
    );
  }

  /**
   * Implementation of setUp().
   */
  function setUp() {
    parent::setUp('ctools', 'sweaver', 'jquery_ui');
  }

  /**
   * Debug helper function. Writes values away to a text file in the files directory.
   */
  function _debugHelper($value, $writetype = 'a+') {
    $debug = fopen($this->originalFileDirectory .'/simpletestdebug.txt', 'a+');
    fwrite($debug, print_r($value, TRUE) ."\n");
    fclose($debug);
  }

  /**
   * Test frontend editor.
   */
  function testFrontendEditor() {
    variable_set('sweaver_styles_delete_tab', TRUE);
    variable_set('sweaver_plugin_status_sweaver_plugin_themeswitch', TRUE);
    drupal_flush_all_caches();

    $admin_user = $this->drupalCreateUser(array('use editor', 'configure sweaver'));
    $this->drupalLogin($admin_user);
    $editor_tests = t('Editor testing');

    // Enable minelli.
    db_query("UPDATE {system} set status = 1 where type = 'theme' AND name = 'minnelli'");

    // Assert custom css plugin is disabled.
    $this->drupalGet('user');
    $this->assertNoRaw('Custom css', t('Custom css tab not found'), $editor_tests);

    // Enable custom css plugin.
    $edit = array(
      'sweaver_plugin_customcss[status]' => 1,
    );
    $this->drupalPost('admin/settings/sweaver/plugins', $edit, t('Save configuration'));
    $this->assertRaw('The configuration options have been saved.', t('Plugins have been saved'), $editor_tests);
    $this->drupalGet('user');
    $this->assertRaw('Custom css', t('Custom css tab found'), $editor_tests);

    // Switch to minnelli.
    $this->assertNoRaw('sweaver_themeswitch/garland', t('Can not switch to garland'), $editor_tests);
    $this->drupalGet('sweaver_themeswitch/minnelli');
    $this->assertRaw(t('You have switched to Minnelli.'), t('Switch to minnelli success.'), $editor_tests);

    // Switch back to garland.
    $this->assertNoRaw('sweaver_themeswitch/minnelli', t('Can not switch to minnelli'), $editor_tests);
    $this->drupalGet('sweaver_themeswitch/garland');
    $this->assertRaw(t('You have switched to Garland.'), t('Switch to garland success.'), $editor_tests);

    // Set some styling for garland.
    $edit = array(
      'css' => '{"#center ":{"font-size":30}}',
      'css_rendered' => '<style type="text/css">#center { font-size: 30px; } </style>',
      'sweaver_plugin_custom_css' => '#header { background-color: blue; }',
      'save_style' => 'Garland 1',
    );

    // Save style and assert it's saved and we can keep working on it. The draft file should be saved, the live file not.
    $this->drupalPost('node', $edit, t('Save and continue'));
    $this->assertRaw(t('The style Garland 1 has been saved. You can keep working on your style.'), t('Style has been saved'), $editor_tests);
    $css = db_fetch_object(db_query("SELECT * FROM {sweaver_style_draft} where style_id = %d AND theme = '%s'", 1, 'garland'));
    $this->assertEqual($edit['css'], $css->css, t('Css has been saved'), $editor_tests);
    $this->assertEqual($edit['sweaver_plugin_custom_css'], $css->customcss, t('Custom css saved'), $editor_tests);
    $this->assertTrue(file_exists(file_directory_path() .'/sweaver/sweaver_garland_'. $css->style_id .'_draft.css'), 'Draft filename written', $editor_tests);
    $this->assertFalse(file_exists(file_directory_path() .'/sweaver/sweaver_garland_'. $css->style_id .'_live.css'), 'Live filename not written', $editor_tests);
    $this->assertNoRaw('sweaver/sweaver_garland_'. $css->style_id .'_draft.css', t('The style Garland 1 has not been loaded in the HTML.'), $editor_tests);

    // Set styling for garland 2.
    $edit = array(
      'css' => '{"#center ":{"font-size":40}}',
      'css_rendered' => '<style type="text/css">#center { font-size: 40px; } </style>',
      'sweaver_plugin_custom_css' => '#header { background-color: red; }',
      'save_style' => 'Garland 2',
      'save_type' => '0',
    );

    // Save style and assert it's saved. We'll look for the message, the entry
    // into the database and the css file in the sweaver directory.
    $this->drupalPost('node', $edit, t('Save and continue'));
    $this->assertRaw(t('The style Garland 2 has been saved. You can keep working on your style.'), t('Style has been saved'), $editor_tests);
    $css = db_fetch_object(db_query("SELECT * FROM {sweaver_style_draft} where style_id = %d AND theme = '%s'", 2, 'garland'));
    $this->assertEqual($edit['css'], $css->css, t('Css has been saved'), $editor_tests);
    $this->assertEqual($edit['sweaver_plugin_custom_css'], $css->customcss, t('Custom css saved'), $editor_tests);
    $this->assertTrue(file_exists(file_directory_path() .'/sweaver/sweaver_garland_'. $css->style_id .'_draft.css'), 'Draft filename written', $editor_tests);
    $this->assertFalse(file_exists(file_directory_path() .'/sweaver/sweaver_garland_'. $css->style_id .'_live.css'), 'Live filename not written', $editor_tests);
    $this->assertNoRaw('sweaver/sweaver_garland_'. $css->style_id .'_draft.css', t('The style Garland 2 has not been loaded in the HTML.'), $editor_tests);
    $this->assertEqual($css->style_id, 2, t('New style saved in database with id 2'), $editor_tests);

    // Load style.
    $edit = array(
      'load_style' => 1,
    );
    $this->drupalPost('user', $edit, t('Load style'));
    $this->assertRaw(t('The style Garland 1 has been loaded. It is only visible for you.'), t('Style loaded'), $editor_tests);
    $this->assertFalse(file_exists(file_directory_path() .'/sweaver/sweaver_garland_1_live.css'), 'Live filename not written', $editor_tests);

    // Publish style.
    $this->drupalPost('user', $edit, t('Publish style'));
    $this->assertRaw(t('The style Garland 1 has been published.'), t('Style published'), $editor_tests);
    $this->assertTrue(file_exists(file_directory_path() .'/sweaver/sweaver_garland_1_live.css'), 'Live filename written', $editor_tests);

    // Delete styles
    $edit = array(
      'delete_style' => 1,
    );
    $this->drupalPost('user', $edit, t('Delete style'));
    $this->assertRaw(t('The style Garland 1 has been deleted.'), t('Style deleted'), $editor_tests);
    $this->assertFalse(file_exists(file_directory_path() .'/sweaver/sweaver_garland_1_draft.css'), 'Draft filename gone', $editor_tests);
    $this->assertFalse(file_exists(file_directory_path() .'/sweaver/sweaver_garland_1_live.css'), 'Live filename gone', $editor_tests);

    // Assert we don't see the publish button.
    $this->assertNoRaw('<h2>Publish style</h2>', t('Publish button not found.'));

    $edit = array(
      'delete_style' => 2,
    );
    $this->drupalPost('user', $edit, t('Delete style'));
    $this->assertRaw(t('The style Garland 2 has been deleted.'), t('Delete style'), $editor_tests);
    $this->assertFalse(file_exists(file_directory_path() .'/sweaver/sweaver_garland_2_draft.css'), 'Draft filename gone', $editor_tests);
    $this->assertFalse(file_exists(file_directory_path() .'/sweaver/sweaver_garland_2_live.css'), 'Live filename gone', $editor_tests);

    // Set styling for garland 3.
    $edit = array(
      'css' => '{"#center ":{"font-size":40}}',
      'css_rendered' => '<style type="text/css">#center { font-size: 40px; } </style>',
      'sweaver_plugin_custom_css' => '#header { background-color: red; }',
      'save_style' => 'Garland 3',
    );

    // Save style and assert it's saved. We'll look for the message, the entry
    // into the database and the css file in the sweaver directory.
    $this->drupalPost('node', $edit, t('Save and continue'));
    $this->assertRaw(t('The style Garland 3 has been saved. You can keep working on your style.'), t('Style has been saved'), $editor_tests);
    $css = db_fetch_object(db_query("SELECT * FROM {sweaver_style_draft} where style_id = %d AND theme = '%s'", 3, 'garland'));
    $this->assertEqual($edit['css'], $css->css, t('Css has been saved'), $editor_tests);
    $this->assertEqual($edit['sweaver_plugin_custom_css'], $css->customcss, t('Custom css saved'), $editor_tests);
    $this->assertTrue(file_exists(file_directory_path() .'/sweaver/sweaver_garland_'. $css->style_id .'_draft.css'), 'Draft filename written', $editor_tests);
    $this->assertFalse(file_exists(file_directory_path() .'/sweaver/sweaver_garland_'. $css->style_id .'_live.css'), 'Live filename not written', $editor_tests);
    $this->assertNoRaw('sweaver/sweaver_garland_'. $css->style_id .'_draft.css', t('The style Garland 3 has not been loaded in the HTML.'), $editor_tests);
    $this->assertEqual($css->style_id, 3, t('New style saved in database with id 3'), $editor_tests);

    // Load style.
    $edit = array(
      'load_style' => 3,
    );
    $this->drupalPost('user', $edit, t('Load style'));
    $this->assertRaw(t('The style Garland 3 has been loaded. It is only visible for you.'), t('Style loaded'), $editor_tests);
    $this->assertFalse(file_exists(file_directory_path() .'/sweaver/sweaver_garland_3_live.css'), 'Live filename not written', $editor_tests);

    // Assert we see the publish button.
    $this->assertRaw('<h2>Publish style</h2>', t('Publish button found.'));

    // Resave this style as Garland 4.
    $edit = array(
      'css' => '{"#center ":{"font-size":30}}',
      'css_rendered' => '<style type="text/css">#center { font-size: 30px; } </style>',
      'sweaver_plugin_custom_css' => '#header { background-color: blue; }',
      'save_style' => 'Garland 4',
      'save_type' => '0',
    );
    $this->drupalPost('node', $edit, t('Save and continue'));
    $this->assertRaw(t('The style Garland 4 has been saved. You can keep working on your style.'), t('New styles saved and working in draft.'), $editor_tests);
    $css = db_fetch_object(db_query("SELECT * FROM {sweaver_style_draft} where style_id = %d AND theme = '%s'", 4, 'garland'));
    $this->assertTrue(file_exists(file_directory_path() .'/sweaver/sweaver_garland_'. $css->style_id .'_draft.css'), 'Draft filename written', $editor_tests);
    $this->assertFalse(file_exists(file_directory_path() .'/sweaver/sweaver_garland_'. $css->style_id .'_live.css'), 'Live filename written', $editor_tests);
    $this->assertEqual($css->style_id, 4, t('New style saved in database with id 4'), $editor_tests);

    // Save and publish button style.
    $edit = array(
      'css' => '{"#center ":{"font-size":30}}',
      'css_rendered' => '<style type="text/css">#center { font-size: 30px; } </style>',
      'sweaver_plugin_custom_css' => '#header { background-color: blue; }',
      'save_style' => 'Garland 5',
      'save_type' => '0',
    );
    $this->drupalPost('node', $edit, t('Save and publish'));
    $this->assertRaw(t('The style Garland 5 has been saved and published. You can keep working on your style.'), t('New styles saved and published.'), $editor_tests);
    $css = db_fetch_object(db_query("SELECT * FROM {sweaver_style_draft} where style_id = %d AND theme = '%s'", 5, 'garland'));
    $this->assertTrue(file_exists(file_directory_path() .'/sweaver/sweaver_garland_'. $css->style_id .'_draft.css'), 'Draft filename written', $editor_tests);
    $this->assertTrue(file_exists(file_directory_path() .'/sweaver/sweaver_garland_'. $css->style_id .'_live.css'), 'Live filename written', $editor_tests);
    $this->assertEqual($css->style_id, 5, t('New style saved and published in database with id 5'), $editor_tests);
  }
}
